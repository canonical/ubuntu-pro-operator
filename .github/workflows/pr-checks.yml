name: PR Checks

on:
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Linting
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install tox
        run: sudo apt-get update && sudo apt-get install -y tox
      
      - name: Run linting
        run: tox run -e lint

  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install tox
        run: sudo apt-get update && sudo apt-get install -y tox
      
      - name: Run unit tests
        run: tox run -e unit

  build:
    runs-on: ubuntu-latest
    name: Build Charms
    needs: [lint, unit-tests]
    strategy:
      matrix:
        build-target: [ubuntu-advantage, ubuntu-advantage_noble, ubuntu-pro, ubuntu-pro_noble]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup LXD
        uses: canonical/setup-lxd@v0.1.3
        with:
          channel: latest/stable

      - name: Install charmcraft
        run: sudo snap install charmcraft --classic
      
      - name: Build charm(s)
        run: make ${{ matrix.build-target }}

      - name: Verify built charm exists
        run: |
          echo "Verifying built charm for ${{ matrix.build-target }}"
          CHARM_FILE=$(ls ${{ matrix.build-target }}_*.charm 2>/dev/null || true)
          if [ -z "$CHARM_FILE" ] || [ ! -f "$CHARM_FILE" ]; then
            echo "::error::Charm file not found for: ${{ matrix.build-target }}"
            echo "Current directory: $(pwd)"
            echo "Directory contents:"
            ls -la
            exit 1
          fi
          echo "âœ“ Found: $CHARM_FILE"
          ls -la "$CHARM_FILE"
          echo "CHARM_FILE=$CHARM_FILE" >> $GITHUB_ENV

      - name: Upload built charm(s)
        uses: actions/upload-artifact@v4
        with:
          name: charm-${{ matrix.build-target }}
          path: ${{ env.CHARM_FILE }}